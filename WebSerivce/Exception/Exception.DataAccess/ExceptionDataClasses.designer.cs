#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JN.ESB.Exception
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using JN.ESB.Core.Service.Common;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EsbExceptionDb")]
	public partial class ExceptionDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insert异常类型对象(异常类型对象 instance);
    partial void Update异常类型对象(异常类型对象 instance);
    partial void Delete异常类型对象(异常类型对象 instance);
    partial void Insert异常信息对象(异常信息对象 instance);
    partial void Update异常信息对象(异常信息对象 instance);
    partial void Delete异常信息对象(异常信息对象 instance);
    #endregion

    public ExceptionDataClassesDataContext() :
        base(EsbConfig.getConnStringByDBName("EsbExceptionDb"), mappingSource)
		{
			OnCreated();
		}
		
		public ExceptionDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExceptionDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExceptionDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExceptionDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<异常类型对象> 异常类型对象
		{
			get
			{
				return this.GetTable<异常类型对象>();
			}
		}
		
		public System.Data.Linq.Table<异常信息对象> 异常信息对象
		{
			get
			{
				return this.GetTable<异常信息对象>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionType")]
	public partial class 异常类型对象 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _描述;
		
		private System.Nullable<int> _异常级别;
		
		private string _级别描述;
		
		private int _类型编码;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On描述Changing(string value);
    partial void On描述Changed();
    partial void On异常级别Changing(System.Nullable<int> value);
    partial void On异常级别Changed();
    partial void On级别描述Changing(string value);
    partial void On级别描述Changed();
    partial void On类型编码Changing(int value);
    partial void On类型编码Changed();
    #endregion
		
		public 异常类型对象()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Desception", Storage="_描述", DbType="VarChar(4000)")]
		public string 描述
		{
			get
			{
				return this._描述;
			}
			set
			{
				if ((this._描述 != value))
				{
					this.On描述Changing(value);
					this.SendPropertyChanging();
					this._描述 = value;
					this.SendPropertyChanged("描述");
					this.On描述Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionLevel", Storage="_异常级别", DbType="Int")]
		public System.Nullable<int> 异常级别
		{
			get
			{
				return this._异常级别;
			}
			set
			{
				if ((this._异常级别 != value))
				{
					this.On异常级别Changing(value);
					this.SendPropertyChanging();
					this._异常级别 = value;
					this.SendPropertyChanged("异常级别");
					this.On异常级别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LevelDesception", Storage="_级别描述", DbType="NVarChar(4000)")]
		public string 级别描述
		{
			get
			{
				return this._级别描述;
			}
			set
			{
				if ((this._级别描述 != value))
				{
					this.On级别描述Changing(value);
					this.SendPropertyChanging();
					this._级别描述 = value;
					this.SendPropertyChanged("级别描述");
					this.On级别描述Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TypeId", Storage="_类型编码", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 类型编码
		{
			get
			{
				return this._类型编码;
			}
			set
			{
				if ((this._类型编码 != value))
				{
					this.On类型编码Changing(value);
					this.SendPropertyChanging();
					this._类型编码 = value;
					this.SendPropertyChanged("类型编码");
					this.On类型编码Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionCoreTb")]
	public partial class 异常信息对象 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _异常编码;
		
		private System.DateTime _异常时间;
		
		private string _异常描述;
		
		private string _异常代码;
		
		private string _异常信息;
		
		private int _异常级别;
		
		private int _异常类型;
		
		private string _方法名称;
		
		private string _主机名称;
		
		private System.Nullable<System.Guid> _消息编码;
		
		private System.Nullable<System.Guid> _绑定地址编码;
		
		private int _异常信息状态;
		
		private string _请求消息体;
		
		private int _绑定类型;
		
		private string _请求密码;
		
		private int _请求类型;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On异常编码Changing(System.Guid value);
    partial void On异常编码Changed();
    partial void On异常时间Changing(System.DateTime value);
    partial void On异常时间Changed();
    partial void On异常描述Changing(string value);
    partial void On异常描述Changed();
    partial void On异常代码Changing(string value);
    partial void On异常代码Changed();
    partial void On异常信息Changing(string value);
    partial void On异常信息Changed();
    partial void On异常级别Changing(int value);
    partial void On异常级别Changed();
    partial void On异常类型Changing(int value);
    partial void On异常类型Changed();
    partial void On方法名称Changing(string value);
    partial void On方法名称Changed();
    partial void On主机名称Changing(string value);
    partial void On主机名称Changed();
    partial void On消息编码Changing(System.Nullable<System.Guid> value);
    partial void On消息编码Changed();
    partial void On绑定地址编码Changing(System.Nullable<System.Guid> value);
    partial void On绑定地址编码Changed();
    partial void On异常信息状态Changing(int value);
    partial void On异常信息状态Changed();
    partial void On请求消息体Changing(string value);
    partial void On请求消息体Changed();
    partial void On绑定类型Changing(int value);
    partial void On绑定类型Changed();
    partial void On请求密码Changing(string value);
    partial void On请求密码Changed();
    partial void On请求类型Changing(int value);
    partial void On请求类型Changed();
    #endregion
		
		public 异常信息对象()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionID", Storage="_异常编码", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid 异常编码
		{
			get
			{
				return this._异常编码;
			}
			set
			{
				if ((this._异常编码 != value))
				{
					this.On异常编码Changing(value);
					this.SendPropertyChanging();
					this._异常编码 = value;
					this.SendPropertyChanged("异常编码");
					this.On异常编码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionTime", Storage="_异常时间", DbType="DateTime NOT NULL")]
		public System.DateTime 异常时间
		{
			get
			{
				return this._异常时间;
			}
			set
			{
				if ((this._异常时间 != value))
				{
					this.On异常时间Changing(value);
					this.SendPropertyChanging();
					this._异常时间 = value;
					this.SendPropertyChanged("异常时间");
					this.On异常时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Description", Storage="_异常描述", DbType="NVarChar(254)")]
		public string 异常描述
		{
			get
			{
				return this._异常描述;
			}
			set
			{
				if ((this._异常描述 != value))
				{
					this.On异常描述Changing(value);
					this.SendPropertyChanging();
					this._异常描述 = value;
					this.SendPropertyChanged("异常描述");
					this.On异常描述Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionCode", Storage="_异常代码", DbType="NVarChar(50)")]
		public string 异常代码
		{
			get
			{
				return this._异常代码;
			}
			set
			{
				if ((this._异常代码 != value))
				{
					this.On异常代码Changing(value);
					this.SendPropertyChanging();
					this._异常代码 = value;
					this.SendPropertyChanged("异常代码");
					this.On异常代码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionInfo", Storage="_异常信息", DbType="NText")]
		public string 异常信息
		{
			get
			{
				return this._异常信息;
			}
			set
			{
				if ((this._异常信息 != value))
				{
					this.On异常信息Changing(value);
					this.SendPropertyChanging();
					this._异常信息 = value;
					this.SendPropertyChanged("异常信息");
					this.On异常信息Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionLevel", Storage="_异常级别", DbType="Int NOT NULL")]
		public int 异常级别
		{
			get
			{
				return this._异常级别;
			}
			set
			{
				if ((this._异常级别 != value))
				{
					this.On异常级别Changing(value);
					this.SendPropertyChanging();
					this._异常级别 = value;
					this.SendPropertyChanged("异常级别");
					this.On异常级别Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionType", Storage="_异常类型", DbType="Int NOT NULL")]
		public int 异常类型
		{
			get
			{
				return this._异常类型;
			}
			set
			{
				if ((this._异常类型 != value))
				{
					this.On异常类型Changing(value);
					this.SendPropertyChanging();
					this._异常类型 = value;
					this.SendPropertyChanged("异常类型");
					this.On异常类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MethodName", Storage="_方法名称", DbType="NChar(50)")]
		public string 方法名称
		{
			get
			{
				return this._方法名称;
			}
			set
			{
				if ((this._方法名称 != value))
				{
					this.On方法名称Changing(value);
					this.SendPropertyChanging();
					this._方法名称 = value;
					this.SendPropertyChanged("方法名称");
					this.On方法名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HostName", Storage="_主机名称", DbType="NVarChar(50)")]
		public string 主机名称
		{
			get
			{
				return this._主机名称;
			}
			set
			{
				if ((this._主机名称 != value))
				{
					this.On主机名称Changing(value);
					this.SendPropertyChanging();
					this._主机名称 = value;
					this.SendPropertyChanged("主机名称");
					this.On主机名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MessageID", Storage="_消息编码", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> 消息编码
		{
			get
			{
				return this._消息编码;
			}
			set
			{
				if ((this._消息编码 != value))
				{
					this.On消息编码Changing(value);
					this.SendPropertyChanging();
					this._消息编码 = value;
					this.SendPropertyChanged("消息编码");
					this.On消息编码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BindingTemplateID", Storage="_绑定地址编码", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> 绑定地址编码
		{
			get
			{
				return this._绑定地址编码;
			}
			set
			{
				if ((this._绑定地址编码 != value))
				{
					this.On绑定地址编码Changing(value);
					this.SendPropertyChanging();
					this._绑定地址编码 = value;
					this.SendPropertyChanged("绑定地址编码");
					this.On绑定地址编码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExceptionStatus", Storage="_异常信息状态", DbType="Int NOT NULL")]
		public int 异常信息状态
		{
			get
			{
				return this._异常信息状态;
			}
			set
			{
				if ((this._异常信息状态 != value))
				{
					this.On异常信息状态Changing(value);
					this.SendPropertyChanging();
					this._异常信息状态 = value;
					this.SendPropertyChanged("异常信息状态");
					this.On异常信息状态Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MessageBody", Storage="_请求消息体", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string 请求消息体
		{
			get
			{
				return this._请求消息体;
			}
			set
			{
				if ((this._请求消息体 != value))
				{
					this.On请求消息体Changing(value);
					this.SendPropertyChanging();
					this._请求消息体 = value;
					this.SendPropertyChanged("请求消息体");
					this.On请求消息体Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BindingType", Storage="_绑定类型", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int 绑定类型
		{
			get
			{
				return this._绑定类型;
			}
			set
			{
				if ((this._绑定类型 != value))
				{
					this.On绑定类型Changing(value);
					this.SendPropertyChanging();
					this._绑定类型 = value;
					this.SendPropertyChanged("绑定类型");
					this.On绑定类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RequestPwd", Storage="_请求密码", DbType="NChar(50)", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string 请求密码
		{
			get
			{
				return this._请求密码;
			}
			set
			{
				if ((this._请求密码 != value))
				{
					this.On请求密码Changing(value);
					this.SendPropertyChanging();
					this._请求密码 = value;
					this.SendPropertyChanged("请求密码");
					this.On请求密码Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RequestType", Storage="_请求类型", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int 请求类型
		{
			get
			{
				return this._请求类型;
			}
			set
			{
				if ((this._请求类型 != value))
				{
					this.On请求类型Changing(value);
					this.SendPropertyChanging();
					this._请求类型 = value;
					this.SendPropertyChanged("请求类型");
					this.On请求类型Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
